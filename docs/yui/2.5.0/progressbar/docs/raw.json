{"majorversion": 2, "filemap": {"progressbar-debug.js": {"classlist": ["YAHOO.widget.ProgressBar"], "name": "progressbar-debug.js", "module": "progressbar"}}, "modules": {"progressbar": {"description": "The ProgressBar widget provides an easy way to draw a bar depicting progress of an operation.\nIt allows for highly customized styles", "submodules": [], "classlist": ["YAHOO.widget.ProgressBar"], "title": "ProgressBar Widget", "requires": "yahoo, dom, event, element", "filelist": ["progressbar-debug.js"], "subdata": {}, "optional": "animation", "name": "progressbar"}}, "classmap": {"YAHOO.widget.ProgressBar": {"name": "YAHOO.widget.ProgressBar", "configs": {"direction": {"default": "'lr'", "type": "String", "description": "Direction of movement of the bar.  \nIt can be any of 'lr' (left to right), 'rl' (the reverse) , 'tb' (top to bottom) or 'bt', case-insensitive.\nCan only be set once and only before rendering."}, "anim": {"default": "null", "type": "{instance of YAHOO.util.Anim}", "description": "A reference to the YAHOO.util.Anim instance attached to the bar.  (ReadOnly)  \nIf the Animation utility is loaded, it will be automatically used."}, "ariaText": {"default": "'|'", "type": "String", "description": "The text to be voiced by screen readers.  \nThe text should contain a vertical bar character where the current  value of the bar should be inserted."}, "maxValue": {"default": "100", "type": "Number", "description": "Represents the top value for the bar. \nThe bar will be fully extended when reaching this value.  \nValues higher than this will be ignored."}, "value": {"default": "50", "type": "Number", "description": "The value for the bar.  \nValid values are in between the minValue and maxValue attributes."}, "minValue": {"default": "0", "type": "Number", "description": "Represents the lowest value for the bar. \nThe bar will be totally collapsed when reaching this value.  \nValues lower than this will be ignored."}, "barColor": {"default": "'blue'", "type": "String - CSS color specification", "description": "Color for the bar.  It can be any valid CSS color value."}, "width": {"default": "200px", "type": "Number or String", "description": "Width of the ProgressBar.\nIf a number, it will be presumed to be in pixels.  \nIf a string it should be a valid setting for the CSS width attribute.  \nIt will always be returned as a string including units."}, "backColor": {"default": "'white'", "type": "String - CSS color specification", "description": "Color for the background.  It can be any valid CSS color value."}, "barEl": {"readonly": "", "type": "HTMLElement (div)", "description": "Reference to the HTML object that makes the moving bar (read-only)"}, "height": {"default": "20px", "type": "Number or String", "description": "Height of the ProgressBar.\nIf a number, it will be presumed to be in pixels.  \nIf a string it should be a valid setting for the CSS height attribute.  \nIt will always be returned as a string including units."}, "border": {"default": "'none'", "type": "String - CSS border specification", "description": "CSS attributes for the border."}, "maskEl": {"readonly": "", "type": "HTMLElement (table)", "description": "Reference to the HTML object that overlays the bar providing the mask. (read-only)"}}, "constructors": [{"params": [{"type": "object", "name": "oConfigs", "description": "  An object containing any configuration attributes to be set"}], "description": "A Progress Bar providing various visual options, animation, it can grow vertically or horizontally in any direction\nand fires several events while moving."}], "namespace": "YAHOO.widget", "module": "progressbar", "properties": {"_previousValue": {"description": "The previous value setting for the bar.  Used mostly as information to event listeners", "default": "100", "private": "", "guessedname": "_previousValue", "guessedtype": "property", "type": "Number"}, "_barSpace": {"description": "The actual space (in pixels) available for the bar within the mask", "default": "100", "private": "", "guessedname": "_barSpace", "guessedtype": "property", "type": "Number"}}, "guessedname": "Prog", "methods": {"destroy": {"return": {"type": "", "description": "void"}, "description": "It will destroy the ProgressBar, related objects and unsubscribe all events", "guessedname": "destroy", "guessedtype": "function"}, "redraw": {"guessedname": "redraw", "return": {"type": "", "description": "void"}, "description": "It will recalculate the bar size and position and redraw it", "private": "", "guessedtype": "function"}, "initAttributes": {"guessedname": "initAttributes", "params": [{"type": "Object", "name": "oConfigs", "description": "  (Optional) Object literal definition of configuration values."}], "description": "Implementation of Element's abstract method. Sets up config values.", "private": "", "guessedtype": "function"}, "_recalculateConstants": {"guessedname": "_recalculateConstants", "return": {"type": "", "description": "void"}, "description": "Calculates some auxiliary values to make the rendering faster", "private": "", "guessedtype": "function"}, "render": {"return": {"type": "YAHOO.widget.ProgressBar", "description": ""}, "description": "It will render the ProgressBar into the given container.  \nIf the container has other content, the ProgressBar will be appended to them.\nIf the second argument is provided, the ProgressBar will be inserted before the given child.\nThe method is chainable since it returns a reference to this instance.", "chainable": "", "params": [{"type": "HTML Element", "name": "el", "description": "   HTML element that will contain the ProgressBar"}, {"type": "HTML Element", "name": "before", "description": "   (optional) If present, the ProgressBar will be inserted before this element."}], "guessedname": "render", "guessedtype": "function"}}, "extends": "YAHOO.util.Element", "superclass": "YAHOO.util.Element", "file": "progressbar-debug.js", "guessedtype": "function", "shortname": "ProgressBar", "events": {"borderChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "borderChange", "description": "Fires when the value for the configuration attribute 'border' changes."}, "beforeAriaTextChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "beforeAriaTextChange", "description": "Fires before the value for the configuration attribute 'ariaText' changes. Return false to cancel the attribute change."}, "heightChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "heightChange", "description": "Fires when the value for the configuration attribute 'height' changes."}, "completeEvent": {"type": "CustomEvent", "params": [{"type": "Number", "name": "value", "description": "  the current (final)  value of the node"}], "description": "It will fire at the end of the animation or immediately upon changing values if animation is not loaded"}, "minValueChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "minValueChange", "description": "Fires when the value for the configuration attribute 'minValue' changes."}, "barElChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "barElChange", "description": "Fires when the value for the configuration attribute 'barEl' changes."}, "beforeHeightChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "beforeHeightChange", "description": "Fires before the value for the configuration attribute 'height' changes. Return false to cancel the attribute change."}, "beforeBorderChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "beforeBorderChange", "description": "Fires before the value for the configuration attribute 'border' changes. Return false to cancel the attribute change."}, "beforeBarColorChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "beforeBarColorChange", "description": "Fires before the value for the configuration attribute 'barColor' changes. Return false to cancel the attribute change."}, "beforeAnimChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "beforeAnimChange", "description": "Fires before the value for the configuration attribute 'anim' changes. Return false to cancel the attribute change."}, "backColorChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "backColorChange", "description": "Fires when the value for the configuration attribute 'backColor' changes."}, "beforeMaxValueChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "beforeMaxValueChange", "description": "Fires before the value for the configuration attribute 'maxValue' changes. Return false to cancel the attribute change."}, "beforeWidthChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "beforeWidthChange", "description": "Fires before the value for the configuration attribute 'width' changes. Return false to cancel the attribute change."}, "ariaTextChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "ariaTextChange", "description": "Fires when the value for the configuration attribute 'ariaText' changes."}, "beforeMaskElChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "beforeMaskElChange", "description": "Fires before the value for the configuration attribute 'maskEl' changes. Return false to cancel the attribute change."}, "beforeMinValueChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "beforeMinValueChange", "description": "Fires before the value for the configuration attribute 'minValue' changes. Return false to cancel the attribute change."}, "maskElChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "maskElChange", "description": "Fires when the value for the configuration attribute 'maskEl' changes."}, "valueChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "valueChange", "description": "Fires when the value for the configuration attribute 'value' changes."}, "animChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "animChange", "description": "Fires when the value for the configuration attribute 'anim' changes."}, "changingEvent": {"type": "CustomEvent", "params": [{"type": "Number", "name": "value", "description": " the current (changing) value of the node"}], "description": "If animation is loaded, it will trigger for each frame of the animation providing partial values"}, "barColorChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "barColorChange", "description": "Fires when the value for the configuration attribute 'barColor' changes."}, "beforeValueChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "beforeValueChange", "description": "Fires before the value for the configuration attribute 'value' changes. Return false to cancel the attribute change."}, "beforeBarElChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "beforeBarElChange", "description": "Fires before the value for the configuration attribute 'barEl' changes. Return false to cancel the attribute change."}, "maxValueChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "maxValueChange", "description": "Fires when the value for the configuration attribute 'maxValue' changes."}, "beforeDirectionChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "beforeDirectionChange", "description": "Fires before the value for the configuration attribute 'direction' changes. Return false to cancel the attribute change."}, "beforeBackColorChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "beforeBackColorChange", "description": "Fires before the value for the configuration attribute 'backColor' changes. Return false to cancel the attribute change."}, "directionChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "directionChange", "description": "Fires when the value for the configuration attribute 'direction' changes."}, "startEvent": {"type": "CustomEvent", "params": [{"type": "Number", "name": "value", "description": "  the current (initial) value of the node"}], "description": "Fires when the value is about to change.  It reports the starting value"}, "widthChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "widthChange", "description": "Fires when the value for the configuration attribute 'width' changes."}}, "description": "A Progress Bar providing various visual options, animation, it can grow vertically or horizontally in any direction\nand fires several events while moving."}}, "version": "1.0.0", "namespaces": ["YAHOO.widget"]}